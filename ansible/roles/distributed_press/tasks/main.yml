# Vars are prefixed with distributed_press_

- name: "Stop systemd-resolved if it exists to free up dns port"
  systemd:
    daemon_reload: true
    state: stopped
    name: systemd-resolved

- name: Copy resolved rule to disable listening on port 53
  template:
    src: 10-make-dns-work.conf.j2
    dest: "/etc/systemd/resolved.conf.d/10-make-dns-work.conf"

- name: "Stop systemd-resolved if it exists to free up dns port"
  systemd:
    daemon_reload: true
    state: started
    enabled: true
    name: systemd-resolved

- name: Ensure user exists for DP service
  user:
    name: "{{distributed_press_user}}"
    append: true
    # TODO: is this needed?
    groups: adm
    shell: /bin/bash
    comment: User for the distributed.press API server

- name: "Set up node+npm"
  include_role:
    name: geerlingguy.nodejs

- name: Add distributed.press systemd service
  template:
    src: distributed.press.service.j2
    dest: "/etc/systemd/system/{{distributed_press_service_name}}.service"

- name: "Stop distributed.press service to recompile"
  systemd:
    state: stopped
    name: "{{distributed_press_service_name}}"

- name: Clone or update DP codebase
  become: yes
  become_user: "{{distributed_press_user}}"
  git:
    repo: "{{distributed_press_git_repo}}"
    version: "{{distributed_press_git_branch}}"
    dest: "{{distributed_press_source}}"
    clone: yes
    update: yes

- name: Install NPM Dependencies
  become: yes
  become_user: "{{distributed_press_user}}"
  shell: |
    cd {{distributed_press_source}}
    npm ci

- name: "Enable Node to bind to port 53 for DNS"
  shell: setcap CAP_NET_BIND_SERVICE=+eip /usr/bin/node

- name: "Enable DNS traffic through firewall"
  shell: "ufw allow in 53/udp"

- name: "Enable libp2p udp traffic through firewall"
  shell: "ufw allow in 7976/udp"

- name: "Enable libp2p tcp traffic through firewall"
  shell: "ufw allow in 7976/tcp"

- name: "Run distributed.press service"
  systemd:
    daemon_reload: true
    state: restarted
    enabled: true
    name: "{{distributed_press_service_name}}"

- name: "Install NGINX/Certbot"
  apt:
    pkg:
      - certbot
      - nginx
      - python3-certbot-nginx
    state: latest
    update_cache: true

- name: "Copy over site config"
  template:
    src: nginx-site.j2
    dest: "/etc/nginx/sites-enabled/{{distributed_press_domain}}"

- name: "Reload NGINX"
  systemd:
    daemon_reload: true
    state: restarted
    enabled: true
    name: nginx

- name: "Enable NGINX firewall"
  shell: "ufw allow 'Nginx Full'"

- name: "Register certbot certificate"
  shell: "certbot --nginx -d {{distributed_press_domain}} --expand --agree-tos --no-eff-email --email {{distributed_press_letsencrypt_email}}"
